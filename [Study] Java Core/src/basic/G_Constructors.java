package basic;

public class G_Constructors {

	/**
	 * ORDER OF INITIALIZATION
	 * -----------------------
	 * 
	 * 1. If there is a superclass, initialize if first
	 * 2. Static variable declaration and static initializers in the order they appear in the file
	 * 3. Instance variable declaration and instance initializers in the order they appear in the file
	 * 4. The CONSTRUCTOR
	 * 
	 * OBS> All 4 rules apply if the object is instantiated; if the class is referred without a new call, only 1 and 2 apply
	 * 
	 */
	
	
	/**
	 * OBSERVATIONS
	 * ------------
	 * 
	 * DEFAULT NO-ARGUMENT CONSTRUCTOR
	 * 	- Generated by Java during compilation if not supplied
	 * 
	 * PRIVATE CONSTRUCTOR
	 * 	- Should be used only if static public members in the class or the class should control the instances
	 * 	- Compilation failure if trying to do new()
	 * 	
	 * OVERLOADINGS CONSTRUCTORS
	 * 	- Can have any number of constructors, as long as they have a different parameter list
	 * 	- To avoid code duplication, they should call each other using this(...) - constructor chaining
	 * 		- The this() call must be the first statement in the constructor, otherwise compilation will fail
	 * 		- this() cannot be called from anywhere else except the 1st line of the constructor
	 * 
	 * ASSIGNING FINAL FIELDS
	 * 	- When declaring them
	 * 	- In an instance initializer
	 * 	- In the constructor
	 * 
	 */
}